logging.level.org.springframework=INFO

spring.thymeleaf.cache = false

################### DataSource Configuration ##########################
spring.datasource.url=jdbc:mysql://localhost:3306/trocajogos?useSSL=false&useTimezone=true&allowPublicKeyRetrieval=true&serverTimezone=America/Sao_Paulo
spring.datasource.username = root
spring.datasource.password = root

spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1


# Configure Hibernate DDL mode: create / update

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Disable the default loggers
# logging.level.org = WARN
# logging.level.blog = WARN

### Show SQL executed with parameter bindings
# logging.level.org.hibernate.SQL = DEBUG
# logging.level.org.hibernate.type.descriptor = TRACE
# spring.jpa.properties.hibernate.format_sql = TRUE

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select login, senha, active from usuario where login=?
spring.queries.roles-query=select u.login, r.role from usuario u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.login=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
